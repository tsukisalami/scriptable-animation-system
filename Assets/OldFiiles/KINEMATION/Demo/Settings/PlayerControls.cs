//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/OldFiiles/KINEMATION/Demo/Settings/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""92751c30-dc35-41c4-84cd-6542189c1ff1"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Value"",
                    ""id"": ""0e401e1d-7208-4098-aa33-9e508f7f0235"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""8c9da6dc-ce9c-403b-a85a-cbec17711f3d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThrowGrenade"",
                    ""type"": ""Button"",
                    ""id"": ""b511db82-e7e2-4fee-9dd2-adca766702f4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleUnarmed"",
                    ""type"": ""Button"",
                    ""id"": ""3038bfee-99fe-4f0a-9aa5-f13f0f160458"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""3ed110c0-0d5c-41c7-adb5-f4865a229385"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Lean"",
                    ""type"": ""Value"",
                    ""id"": ""96591a0b-ac6e-49ed-9c2d-84c82cbd26da"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""781ccf7e-ce71-4b0e-891d-a50f4f3e146d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6da9626a-ab5a-4764-863a-e397a04f3c77"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Value"",
                    ""id"": ""b45ce92e-934c-4d53-a1ba-78329ac56985"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""fafa5449-219a-4f14-9968-8d651ec2f317"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""5f8cec63-aa0a-4b5f-9cb0-cd01efcbe8a9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Prone"",
                    ""type"": ""Button"",
                    ""id"": ""c984d2e8-8329-4859-9e2a-87e65ea1ed31"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Button"",
                    ""id"": ""75a2a6e4-7eb2-4557-a086-e73034f5d88b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ConsumablePrimaryUse"",
                    ""type"": ""Button"",
                    ""id"": ""ebe565fb-0f01-454d-af2c-4e8a6dc49e3e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ConsumableSecondaryUse"",
                    ""type"": ""Button"",
                    ""id"": ""3633e889-ff1c-4da9-b352-f936e63954f4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Suicide"",
                    ""type"": ""Button"",
                    ""id"": ""5bcfec13-5bbd-4433-9869-3c2aa2296889"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CycleScope"",
                    ""type"": ""Button"",
                    ""id"": ""3ebcfcd8-c943-4578-a792-25c54c5c341b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeFireMode"",
                    ""type"": ""Button"",
                    ""id"": ""0bd5b109-473d-4afa-9c67-33e69192c42f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CycleBullet"",
                    ""type"": ""Button"",
                    ""id"": ""622dcad9-ef15-4389-b9aa-f5e724648756"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HoldBreath"",
                    ""type"": ""Value"",
                    ""id"": ""e6e6abb1-78f4-4b54-8408-bdbbf90617f0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""0584330f-22e7-4ad7-b098-378da05fef74"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""677a27e7-221b-4f75-a8f5-84b1d3a4fdea"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeMagnification"",
                    ""type"": ""Value"",
                    ""id"": ""a5537172-ea95-4741-a34b-6a1845b3aad3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleMagnification"",
                    ""type"": ""Button"",
                    ""id"": ""cb2687db-347e-4da3-880a-90ddfe8cce96"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleAttachmentEditing"",
                    ""type"": ""Button"",
                    ""id"": ""72026426-25eb-407a-9e18-c7dacb267e43"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectPrimary"",
                    ""type"": ""Button"",
                    ""id"": ""e6774b6e-309f-41c3-99cb-d82ff697c8f6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0da21a52-d37c-4767-9f62-3c780c5c4f85"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowGrenade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fed3c53-5302-4967-baaa-53dc67cc1bf9"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleUnarmed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cd01e6a-2e9d-4a30-a9e7-cd13242e85ba"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.1,y=0.1)"",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ffaf32f-a733-401b-aa6d-29a88a4e4b53"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""Lean"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c486dae7-4e89-4ac3-9dca-4cc6e2f86e21"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=-1)"",
                    ""groups"": """",
                    ""action"": ""Lean"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e262d69c-223f-4073-b352-ca46f3ab6606"",
                    ""path"": ""<Keyboard>/#(R)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""264568bc-f62c-4850-b57a-b6b822340a5f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""57c26b98-2f5f-4925-8d93-8024ed8ee50d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a495e191-ecc4-48aa-9fc4-f0b5f28c40d5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c5008eb5-2090-4022-a8ac-3e566a2998d7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""57e2167f-a526-46ca-96b8-36ccd6ad400f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""954f0245-e5b1-4d13-b4e9-1e3c4f599112"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d063bf9-6dae-43da-8ce4-83e827681992"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7be0c80d-1e11-4ca8-b0ad-bc15149c57b2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9eea3511-34d7-4ae2-84c1-89afd500b40a"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Prone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62e7a942-28e5-49bc-a26e-16789c65d0ec"",
                    ""path"": ""<Keyboard>/#(X)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a339950d-b934-48ea-a328-66e5255bb102"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConsumablePrimaryUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c955fc81-5f63-4a36-8540-714ad2f853ec"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConsumableSecondaryUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""1d923b1a-2d93-446c-b684-23a6771ab2f5"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Suicide"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""b1227201-cc14-4c21-8154-597d42a8366f"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Suicide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8b7c8382-5f5e-4936-8daf-1e96f9ed1ee9"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Suicide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""efbd646a-1df1-48c7-bb07-c9802bbc1105"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleScope"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b694371-c9bd-48b2-adee-211b3e870fe6"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeFireMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfa878df-51cc-44d9-a10e-3ac9f153ff81"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleBullet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de4ddd4d-6589-44bc-b158-80f2bb952061"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldBreath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""288cf763-4a39-4347-91ff-446e541cfc4a"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66860458-2fc5-452b-9924-03ff478a431a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""id"": ""768f744f-f14a-4061-87b4-7aeffb9033d9"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMagnification"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""0dc82677-bec2-4cc4-ab5a-6beaf28f9762"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMagnification"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""cb004368-1bb8-45c8-aa1b-ffbe47dc5e5d"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMagnification"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Toggle"",
                    ""id"": ""f5dad4de-7c19-449a-ba82-076e4b844878"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMagnification"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""1cca392f-daf7-449a-97a3-f00bc1130e43"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMagnification"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""01da67dc-0210-404c-9a7a-b2b415aa8a23"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMagnification"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1378ee3c-08c8-472e-8c02-38ca29992e7c"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAttachmentEditing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62deb2b0-c57b-482d-8ae8-46047f7406f6"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3de5291-379d-46d1-ac75-8d49b022c7b3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eea1e44c-b366-4767-8cab-309f39f47a0f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Hotbar"",
            ""id"": ""c7fe07aa-9d77-4742-9e7e-eaaf8a160f3a"",
            ""actions"": [
                {
                    ""name"": ""SelectSecondary"",
                    ""type"": ""Button"",
                    ""id"": ""e2ab4037-d006-4323-b2db-6d69d536cdb6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectThrowables"",
                    ""type"": ""Button"",
                    ""id"": ""2c5ecee0-0446-49df-bc09-1848b9704f3e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectSpecialEquipment"",
                    ""type"": ""Button"",
                    ""id"": ""97ee0219-2d7a-4eeb-9624-cc4be5e5bb25"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectMedical"",
                    ""type"": ""Button"",
                    ""id"": ""9a9d1b40-cb90-4dd0-a4b1-6f9c7c8472bb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectTools"",
                    ""type"": ""Button"",
                    ""id"": ""a4ced437-7f7f-4163-aa29-7b3b9b2ec581"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0a72d350-e46c-465f-84e8-0f2263800b87"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""671f9c02-a49c-4039-acc8-e54857e85334"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectThrowables"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d96b978c-7bf4-46e4-81bd-827189ab76c8"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecialEquipment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ac66136-90e2-47a3-8668-4645e0f1a6c1"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectMedical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""216c18ea-ded9-439f-8a53-0ff2d2894e39"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTools"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Attachments"",
            ""id"": ""2f208ee0-9e1d-40b2-b5fd-c55b793cc3ef"",
            ""actions"": [
                {
                    ""name"": ""DigitAxis"",
                    ""type"": ""Value"",
                    ""id"": ""a0e74415-f27e-4fb9-82ab-f7ae12b5497f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c1c839da-be8a-462a-8032-9a0c3d4f5f09"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""DigitAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""797762a3-7317-4392-90ca-8b37508d805b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""DigitAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""675b5941-4fe7-4ae7-934c-d578ce3ce383"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""DigitAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Plane"",
            ""id"": ""59145f07-6257-443d-82fb-1c9ac291ba13"",
            ""actions"": [
                {
                    ""name"": ""ToggleHelp"",
                    ""type"": ""Button"",
                    ""id"": ""c1766d81-2c12-41d3-92d1-b37f91aa49e8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""Value"",
                    ""id"": ""e9485076-db6a-4bed-a001-d4ab32a1b623"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RollPitch"",
                    ""type"": ""Value"",
                    ""id"": ""12a6d29b-2afa-45bf-8273-6c6bba36a194"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""14555a3d-d24b-4219-9e59-ddabf42ce26e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""9964d257-5a64-4e86-8a00-02f5ad0ccbe9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleFlaps"",
                    ""type"": ""Button"",
                    ""id"": ""f2acd037-d895-484f-a4d3-6b729696f482"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireMissile"",
                    ""type"": ""Button"",
                    ""id"": ""9d056210-0a11-42e7-9c89-068146990036"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireCannon"",
                    ""type"": ""Button"",
                    ""id"": ""5ca1543c-a886-4b05-9562-c01feb827539"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleAI"",
                    ""type"": ""Button"",
                    ""id"": ""69fade91-148b-425c-8cd7-321b89d424aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b9dfb8df-dacb-4103-bf55-b774171d95d9"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleHelp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""93e11ad6-4792-4e14-8fb7-d7e0d1745a99"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""87fe3749-ac8c-424a-9d82-b350dd443fbe"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4b29dc4c-a7eb-4065-a8e5-ebe65567b609"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""33ebc076-a862-465d-8ed5-db2618dc4bff"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f812ded8-65bb-446a-87d6-2db1000fedb1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""eea2deaf-b6f1-4129-9d4c-60f61f58bf0b"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6f673e6f-1e7b-4c62-a7a2-a12e2db3ae8f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f0eb40ac-f927-4aad-9266-295506b6cd61"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53408237-d4ee-4138-92ce-9eeec10c7d27"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleFlaps"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1e07e38-c579-4e89-a6f4-4c63fe40bdf4"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireMissile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ebf11ec-7182-4f4d-af09-3b566314e68b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireCannon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8dd5ee1-fda6-4d2b-8026-7929a7791aff"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Car"",
            ""id"": ""359dc3be-3651-4e1a-98ef-7492f5dcfc5a"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""51f0879e-593f-4f00-b5da-d36e236e010f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""92539833-dd30-4874-b6eb-50a6fc0472e2"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Fire = m_Gameplay.FindAction("Fire", throwIfNotFound: true);
        m_Gameplay_Aim = m_Gameplay.FindAction("Aim", throwIfNotFound: true);
        m_Gameplay_ThrowGrenade = m_Gameplay.FindAction("ThrowGrenade", throwIfNotFound: true);
        m_Gameplay_ToggleUnarmed = m_Gameplay.FindAction("ToggleUnarmed", throwIfNotFound: true);
        m_Gameplay_Look = m_Gameplay.FindAction("Look", throwIfNotFound: true);
        m_Gameplay_Lean = m_Gameplay.FindAction("Lean", throwIfNotFound: true);
        m_Gameplay_Reload = m_Gameplay.FindAction("Reload", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_Sprint = m_Gameplay.FindAction("Sprint", throwIfNotFound: true);
        m_Gameplay_Crouch = m_Gameplay.FindAction("Crouch", throwIfNotFound: true);
        m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
        m_Gameplay_Prone = m_Gameplay.FindAction("Prone", throwIfNotFound: true);
        m_Gameplay_Slide = m_Gameplay.FindAction("Slide", throwIfNotFound: true);
        m_Gameplay_ConsumablePrimaryUse = m_Gameplay.FindAction("ConsumablePrimaryUse", throwIfNotFound: true);
        m_Gameplay_ConsumableSecondaryUse = m_Gameplay.FindAction("ConsumableSecondaryUse", throwIfNotFound: true);
        m_Gameplay_Suicide = m_Gameplay.FindAction("Suicide", throwIfNotFound: true);
        m_Gameplay_CycleScope = m_Gameplay.FindAction("CycleScope", throwIfNotFound: true);
        m_Gameplay_ChangeFireMode = m_Gameplay.FindAction("ChangeFireMode", throwIfNotFound: true);
        m_Gameplay_CycleBullet = m_Gameplay.FindAction("CycleBullet", throwIfNotFound: true);
        m_Gameplay_HoldBreath = m_Gameplay.FindAction("HoldBreath", throwIfNotFound: true);
        m_Gameplay_Zoom = m_Gameplay.FindAction("Zoom", throwIfNotFound: true);
        m_Gameplay_Use = m_Gameplay.FindAction("Use", throwIfNotFound: true);
        m_Gameplay_ChangeMagnification = m_Gameplay.FindAction("ChangeMagnification", throwIfNotFound: true);
        m_Gameplay_ToggleMagnification = m_Gameplay.FindAction("ToggleMagnification", throwIfNotFound: true);
        m_Gameplay_ToggleAttachmentEditing = m_Gameplay.FindAction("ToggleAttachmentEditing", throwIfNotFound: true);
        m_Gameplay_SelectPrimary = m_Gameplay.FindAction("SelectPrimary", throwIfNotFound: true);
        // Hotbar
        m_Hotbar = asset.FindActionMap("Hotbar", throwIfNotFound: true);
        m_Hotbar_SelectSecondary = m_Hotbar.FindAction("SelectSecondary", throwIfNotFound: true);
        m_Hotbar_SelectThrowables = m_Hotbar.FindAction("SelectThrowables", throwIfNotFound: true);
        m_Hotbar_SelectSpecialEquipment = m_Hotbar.FindAction("SelectSpecialEquipment", throwIfNotFound: true);
        m_Hotbar_SelectMedical = m_Hotbar.FindAction("SelectMedical", throwIfNotFound: true);
        m_Hotbar_SelectTools = m_Hotbar.FindAction("SelectTools", throwIfNotFound: true);
        // Attachments
        m_Attachments = asset.FindActionMap("Attachments", throwIfNotFound: true);
        m_Attachments_DigitAxis = m_Attachments.FindAction("DigitAxis", throwIfNotFound: true);
        // Plane
        m_Plane = asset.FindActionMap("Plane", throwIfNotFound: true);
        m_Plane_ToggleHelp = m_Plane.FindAction("ToggleHelp", throwIfNotFound: true);
        m_Plane_Throttle = m_Plane.FindAction("Throttle", throwIfNotFound: true);
        m_Plane_RollPitch = m_Plane.FindAction("RollPitch", throwIfNotFound: true);
        m_Plane_Yaw = m_Plane.FindAction("Yaw", throwIfNotFound: true);
        m_Plane_Camera = m_Plane.FindAction("Camera", throwIfNotFound: true);
        m_Plane_ToggleFlaps = m_Plane.FindAction("ToggleFlaps", throwIfNotFound: true);
        m_Plane_FireMissile = m_Plane.FindAction("FireMissile", throwIfNotFound: true);
        m_Plane_FireCannon = m_Plane.FindAction("FireCannon", throwIfNotFound: true);
        m_Plane_ToggleAI = m_Plane.FindAction("ToggleAI", throwIfNotFound: true);
        // Car
        m_Car = asset.FindActionMap("Car", throwIfNotFound: true);
        m_Car_Newaction = m_Car.FindAction("New action", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, PlayerControls.Gameplay.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Hotbar.enabled, "This will cause a leak and performance issues, PlayerControls.Hotbar.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Attachments.enabled, "This will cause a leak and performance issues, PlayerControls.Attachments.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Plane.enabled, "This will cause a leak and performance issues, PlayerControls.Plane.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Car.enabled, "This will cause a leak and performance issues, PlayerControls.Car.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Fire;
    private readonly InputAction m_Gameplay_Aim;
    private readonly InputAction m_Gameplay_ThrowGrenade;
    private readonly InputAction m_Gameplay_ToggleUnarmed;
    private readonly InputAction m_Gameplay_Look;
    private readonly InputAction m_Gameplay_Lean;
    private readonly InputAction m_Gameplay_Reload;
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_Sprint;
    private readonly InputAction m_Gameplay_Crouch;
    private readonly InputAction m_Gameplay_Jump;
    private readonly InputAction m_Gameplay_Prone;
    private readonly InputAction m_Gameplay_Slide;
    private readonly InputAction m_Gameplay_ConsumablePrimaryUse;
    private readonly InputAction m_Gameplay_ConsumableSecondaryUse;
    private readonly InputAction m_Gameplay_Suicide;
    private readonly InputAction m_Gameplay_CycleScope;
    private readonly InputAction m_Gameplay_ChangeFireMode;
    private readonly InputAction m_Gameplay_CycleBullet;
    private readonly InputAction m_Gameplay_HoldBreath;
    private readonly InputAction m_Gameplay_Zoom;
    private readonly InputAction m_Gameplay_Use;
    private readonly InputAction m_Gameplay_ChangeMagnification;
    private readonly InputAction m_Gameplay_ToggleMagnification;
    private readonly InputAction m_Gameplay_ToggleAttachmentEditing;
    private readonly InputAction m_Gameplay_SelectPrimary;
    public struct GameplayActions
    {
        private @PlayerControls m_Wrapper;
        public GameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire => m_Wrapper.m_Gameplay_Fire;
        public InputAction @Aim => m_Wrapper.m_Gameplay_Aim;
        public InputAction @ThrowGrenade => m_Wrapper.m_Gameplay_ThrowGrenade;
        public InputAction @ToggleUnarmed => m_Wrapper.m_Gameplay_ToggleUnarmed;
        public InputAction @Look => m_Wrapper.m_Gameplay_Look;
        public InputAction @Lean => m_Wrapper.m_Gameplay_Lean;
        public InputAction @Reload => m_Wrapper.m_Gameplay_Reload;
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @Sprint => m_Wrapper.m_Gameplay_Sprint;
        public InputAction @Crouch => m_Wrapper.m_Gameplay_Crouch;
        public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
        public InputAction @Prone => m_Wrapper.m_Gameplay_Prone;
        public InputAction @Slide => m_Wrapper.m_Gameplay_Slide;
        public InputAction @ConsumablePrimaryUse => m_Wrapper.m_Gameplay_ConsumablePrimaryUse;
        public InputAction @ConsumableSecondaryUse => m_Wrapper.m_Gameplay_ConsumableSecondaryUse;
        public InputAction @Suicide => m_Wrapper.m_Gameplay_Suicide;
        public InputAction @CycleScope => m_Wrapper.m_Gameplay_CycleScope;
        public InputAction @ChangeFireMode => m_Wrapper.m_Gameplay_ChangeFireMode;
        public InputAction @CycleBullet => m_Wrapper.m_Gameplay_CycleBullet;
        public InputAction @HoldBreath => m_Wrapper.m_Gameplay_HoldBreath;
        public InputAction @Zoom => m_Wrapper.m_Gameplay_Zoom;
        public InputAction @Use => m_Wrapper.m_Gameplay_Use;
        public InputAction @ChangeMagnification => m_Wrapper.m_Gameplay_ChangeMagnification;
        public InputAction @ToggleMagnification => m_Wrapper.m_Gameplay_ToggleMagnification;
        public InputAction @ToggleAttachmentEditing => m_Wrapper.m_Gameplay_ToggleAttachmentEditing;
        public InputAction @SelectPrimary => m_Wrapper.m_Gameplay_SelectPrimary;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @ThrowGrenade.started += instance.OnThrowGrenade;
            @ThrowGrenade.performed += instance.OnThrowGrenade;
            @ThrowGrenade.canceled += instance.OnThrowGrenade;
            @ToggleUnarmed.started += instance.OnToggleUnarmed;
            @ToggleUnarmed.performed += instance.OnToggleUnarmed;
            @ToggleUnarmed.canceled += instance.OnToggleUnarmed;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Lean.started += instance.OnLean;
            @Lean.performed += instance.OnLean;
            @Lean.canceled += instance.OnLean;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Prone.started += instance.OnProne;
            @Prone.performed += instance.OnProne;
            @Prone.canceled += instance.OnProne;
            @Slide.started += instance.OnSlide;
            @Slide.performed += instance.OnSlide;
            @Slide.canceled += instance.OnSlide;
            @ConsumablePrimaryUse.started += instance.OnConsumablePrimaryUse;
            @ConsumablePrimaryUse.performed += instance.OnConsumablePrimaryUse;
            @ConsumablePrimaryUse.canceled += instance.OnConsumablePrimaryUse;
            @ConsumableSecondaryUse.started += instance.OnConsumableSecondaryUse;
            @ConsumableSecondaryUse.performed += instance.OnConsumableSecondaryUse;
            @ConsumableSecondaryUse.canceled += instance.OnConsumableSecondaryUse;
            @Suicide.started += instance.OnSuicide;
            @Suicide.performed += instance.OnSuicide;
            @Suicide.canceled += instance.OnSuicide;
            @CycleScope.started += instance.OnCycleScope;
            @CycleScope.performed += instance.OnCycleScope;
            @CycleScope.canceled += instance.OnCycleScope;
            @ChangeFireMode.started += instance.OnChangeFireMode;
            @ChangeFireMode.performed += instance.OnChangeFireMode;
            @ChangeFireMode.canceled += instance.OnChangeFireMode;
            @CycleBullet.started += instance.OnCycleBullet;
            @CycleBullet.performed += instance.OnCycleBullet;
            @CycleBullet.canceled += instance.OnCycleBullet;
            @HoldBreath.started += instance.OnHoldBreath;
            @HoldBreath.performed += instance.OnHoldBreath;
            @HoldBreath.canceled += instance.OnHoldBreath;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
            @Use.started += instance.OnUse;
            @Use.performed += instance.OnUse;
            @Use.canceled += instance.OnUse;
            @ChangeMagnification.started += instance.OnChangeMagnification;
            @ChangeMagnification.performed += instance.OnChangeMagnification;
            @ChangeMagnification.canceled += instance.OnChangeMagnification;
            @ToggleMagnification.started += instance.OnToggleMagnification;
            @ToggleMagnification.performed += instance.OnToggleMagnification;
            @ToggleMagnification.canceled += instance.OnToggleMagnification;
            @ToggleAttachmentEditing.started += instance.OnToggleAttachmentEditing;
            @ToggleAttachmentEditing.performed += instance.OnToggleAttachmentEditing;
            @ToggleAttachmentEditing.canceled += instance.OnToggleAttachmentEditing;
            @SelectPrimary.started += instance.OnSelectPrimary;
            @SelectPrimary.performed += instance.OnSelectPrimary;
            @SelectPrimary.canceled += instance.OnSelectPrimary;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @ThrowGrenade.started -= instance.OnThrowGrenade;
            @ThrowGrenade.performed -= instance.OnThrowGrenade;
            @ThrowGrenade.canceled -= instance.OnThrowGrenade;
            @ToggleUnarmed.started -= instance.OnToggleUnarmed;
            @ToggleUnarmed.performed -= instance.OnToggleUnarmed;
            @ToggleUnarmed.canceled -= instance.OnToggleUnarmed;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Lean.started -= instance.OnLean;
            @Lean.performed -= instance.OnLean;
            @Lean.canceled -= instance.OnLean;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Prone.started -= instance.OnProne;
            @Prone.performed -= instance.OnProne;
            @Prone.canceled -= instance.OnProne;
            @Slide.started -= instance.OnSlide;
            @Slide.performed -= instance.OnSlide;
            @Slide.canceled -= instance.OnSlide;
            @ConsumablePrimaryUse.started -= instance.OnConsumablePrimaryUse;
            @ConsumablePrimaryUse.performed -= instance.OnConsumablePrimaryUse;
            @ConsumablePrimaryUse.canceled -= instance.OnConsumablePrimaryUse;
            @ConsumableSecondaryUse.started -= instance.OnConsumableSecondaryUse;
            @ConsumableSecondaryUse.performed -= instance.OnConsumableSecondaryUse;
            @ConsumableSecondaryUse.canceled -= instance.OnConsumableSecondaryUse;
            @Suicide.started -= instance.OnSuicide;
            @Suicide.performed -= instance.OnSuicide;
            @Suicide.canceled -= instance.OnSuicide;
            @CycleScope.started -= instance.OnCycleScope;
            @CycleScope.performed -= instance.OnCycleScope;
            @CycleScope.canceled -= instance.OnCycleScope;
            @ChangeFireMode.started -= instance.OnChangeFireMode;
            @ChangeFireMode.performed -= instance.OnChangeFireMode;
            @ChangeFireMode.canceled -= instance.OnChangeFireMode;
            @CycleBullet.started -= instance.OnCycleBullet;
            @CycleBullet.performed -= instance.OnCycleBullet;
            @CycleBullet.canceled -= instance.OnCycleBullet;
            @HoldBreath.started -= instance.OnHoldBreath;
            @HoldBreath.performed -= instance.OnHoldBreath;
            @HoldBreath.canceled -= instance.OnHoldBreath;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
            @Use.started -= instance.OnUse;
            @Use.performed -= instance.OnUse;
            @Use.canceled -= instance.OnUse;
            @ChangeMagnification.started -= instance.OnChangeMagnification;
            @ChangeMagnification.performed -= instance.OnChangeMagnification;
            @ChangeMagnification.canceled -= instance.OnChangeMagnification;
            @ToggleMagnification.started -= instance.OnToggleMagnification;
            @ToggleMagnification.performed -= instance.OnToggleMagnification;
            @ToggleMagnification.canceled -= instance.OnToggleMagnification;
            @ToggleAttachmentEditing.started -= instance.OnToggleAttachmentEditing;
            @ToggleAttachmentEditing.performed -= instance.OnToggleAttachmentEditing;
            @ToggleAttachmentEditing.canceled -= instance.OnToggleAttachmentEditing;
            @SelectPrimary.started -= instance.OnSelectPrimary;
            @SelectPrimary.performed -= instance.OnSelectPrimary;
            @SelectPrimary.canceled -= instance.OnSelectPrimary;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // Hotbar
    private readonly InputActionMap m_Hotbar;
    private List<IHotbarActions> m_HotbarActionsCallbackInterfaces = new List<IHotbarActions>();
    private readonly InputAction m_Hotbar_SelectSecondary;
    private readonly InputAction m_Hotbar_SelectThrowables;
    private readonly InputAction m_Hotbar_SelectSpecialEquipment;
    private readonly InputAction m_Hotbar_SelectMedical;
    private readonly InputAction m_Hotbar_SelectTools;
    public struct HotbarActions
    {
        private @PlayerControls m_Wrapper;
        public HotbarActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectSecondary => m_Wrapper.m_Hotbar_SelectSecondary;
        public InputAction @SelectThrowables => m_Wrapper.m_Hotbar_SelectThrowables;
        public InputAction @SelectSpecialEquipment => m_Wrapper.m_Hotbar_SelectSpecialEquipment;
        public InputAction @SelectMedical => m_Wrapper.m_Hotbar_SelectMedical;
        public InputAction @SelectTools => m_Wrapper.m_Hotbar_SelectTools;
        public InputActionMap Get() { return m_Wrapper.m_Hotbar; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HotbarActions set) { return set.Get(); }
        public void AddCallbacks(IHotbarActions instance)
        {
            if (instance == null || m_Wrapper.m_HotbarActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_HotbarActionsCallbackInterfaces.Add(instance);
            @SelectSecondary.started += instance.OnSelectSecondary;
            @SelectSecondary.performed += instance.OnSelectSecondary;
            @SelectSecondary.canceled += instance.OnSelectSecondary;
            @SelectThrowables.started += instance.OnSelectThrowables;
            @SelectThrowables.performed += instance.OnSelectThrowables;
            @SelectThrowables.canceled += instance.OnSelectThrowables;
            @SelectSpecialEquipment.started += instance.OnSelectSpecialEquipment;
            @SelectSpecialEquipment.performed += instance.OnSelectSpecialEquipment;
            @SelectSpecialEquipment.canceled += instance.OnSelectSpecialEquipment;
            @SelectMedical.started += instance.OnSelectMedical;
            @SelectMedical.performed += instance.OnSelectMedical;
            @SelectMedical.canceled += instance.OnSelectMedical;
            @SelectTools.started += instance.OnSelectTools;
            @SelectTools.performed += instance.OnSelectTools;
            @SelectTools.canceled += instance.OnSelectTools;
        }

        private void UnregisterCallbacks(IHotbarActions instance)
        {
            @SelectSecondary.started -= instance.OnSelectSecondary;
            @SelectSecondary.performed -= instance.OnSelectSecondary;
            @SelectSecondary.canceled -= instance.OnSelectSecondary;
            @SelectThrowables.started -= instance.OnSelectThrowables;
            @SelectThrowables.performed -= instance.OnSelectThrowables;
            @SelectThrowables.canceled -= instance.OnSelectThrowables;
            @SelectSpecialEquipment.started -= instance.OnSelectSpecialEquipment;
            @SelectSpecialEquipment.performed -= instance.OnSelectSpecialEquipment;
            @SelectSpecialEquipment.canceled -= instance.OnSelectSpecialEquipment;
            @SelectMedical.started -= instance.OnSelectMedical;
            @SelectMedical.performed -= instance.OnSelectMedical;
            @SelectMedical.canceled -= instance.OnSelectMedical;
            @SelectTools.started -= instance.OnSelectTools;
            @SelectTools.performed -= instance.OnSelectTools;
            @SelectTools.canceled -= instance.OnSelectTools;
        }

        public void RemoveCallbacks(IHotbarActions instance)
        {
            if (m_Wrapper.m_HotbarActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IHotbarActions instance)
        {
            foreach (var item in m_Wrapper.m_HotbarActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_HotbarActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public HotbarActions @Hotbar => new HotbarActions(this);

    // Attachments
    private readonly InputActionMap m_Attachments;
    private List<IAttachmentsActions> m_AttachmentsActionsCallbackInterfaces = new List<IAttachmentsActions>();
    private readonly InputAction m_Attachments_DigitAxis;
    public struct AttachmentsActions
    {
        private @PlayerControls m_Wrapper;
        public AttachmentsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DigitAxis => m_Wrapper.m_Attachments_DigitAxis;
        public InputActionMap Get() { return m_Wrapper.m_Attachments; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AttachmentsActions set) { return set.Get(); }
        public void AddCallbacks(IAttachmentsActions instance)
        {
            if (instance == null || m_Wrapper.m_AttachmentsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AttachmentsActionsCallbackInterfaces.Add(instance);
            @DigitAxis.started += instance.OnDigitAxis;
            @DigitAxis.performed += instance.OnDigitAxis;
            @DigitAxis.canceled += instance.OnDigitAxis;
        }

        private void UnregisterCallbacks(IAttachmentsActions instance)
        {
            @DigitAxis.started -= instance.OnDigitAxis;
            @DigitAxis.performed -= instance.OnDigitAxis;
            @DigitAxis.canceled -= instance.OnDigitAxis;
        }

        public void RemoveCallbacks(IAttachmentsActions instance)
        {
            if (m_Wrapper.m_AttachmentsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAttachmentsActions instance)
        {
            foreach (var item in m_Wrapper.m_AttachmentsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AttachmentsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AttachmentsActions @Attachments => new AttachmentsActions(this);

    // Plane
    private readonly InputActionMap m_Plane;
    private List<IPlaneActions> m_PlaneActionsCallbackInterfaces = new List<IPlaneActions>();
    private readonly InputAction m_Plane_ToggleHelp;
    private readonly InputAction m_Plane_Throttle;
    private readonly InputAction m_Plane_RollPitch;
    private readonly InputAction m_Plane_Yaw;
    private readonly InputAction m_Plane_Camera;
    private readonly InputAction m_Plane_ToggleFlaps;
    private readonly InputAction m_Plane_FireMissile;
    private readonly InputAction m_Plane_FireCannon;
    private readonly InputAction m_Plane_ToggleAI;
    public struct PlaneActions
    {
        private @PlayerControls m_Wrapper;
        public PlaneActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleHelp => m_Wrapper.m_Plane_ToggleHelp;
        public InputAction @Throttle => m_Wrapper.m_Plane_Throttle;
        public InputAction @RollPitch => m_Wrapper.m_Plane_RollPitch;
        public InputAction @Yaw => m_Wrapper.m_Plane_Yaw;
        public InputAction @Camera => m_Wrapper.m_Plane_Camera;
        public InputAction @ToggleFlaps => m_Wrapper.m_Plane_ToggleFlaps;
        public InputAction @FireMissile => m_Wrapper.m_Plane_FireMissile;
        public InputAction @FireCannon => m_Wrapper.m_Plane_FireCannon;
        public InputAction @ToggleAI => m_Wrapper.m_Plane_ToggleAI;
        public InputActionMap Get() { return m_Wrapper.m_Plane; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlaneActions set) { return set.Get(); }
        public void AddCallbacks(IPlaneActions instance)
        {
            if (instance == null || m_Wrapper.m_PlaneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlaneActionsCallbackInterfaces.Add(instance);
            @ToggleHelp.started += instance.OnToggleHelp;
            @ToggleHelp.performed += instance.OnToggleHelp;
            @ToggleHelp.canceled += instance.OnToggleHelp;
            @Throttle.started += instance.OnThrottle;
            @Throttle.performed += instance.OnThrottle;
            @Throttle.canceled += instance.OnThrottle;
            @RollPitch.started += instance.OnRollPitch;
            @RollPitch.performed += instance.OnRollPitch;
            @RollPitch.canceled += instance.OnRollPitch;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @ToggleFlaps.started += instance.OnToggleFlaps;
            @ToggleFlaps.performed += instance.OnToggleFlaps;
            @ToggleFlaps.canceled += instance.OnToggleFlaps;
            @FireMissile.started += instance.OnFireMissile;
            @FireMissile.performed += instance.OnFireMissile;
            @FireMissile.canceled += instance.OnFireMissile;
            @FireCannon.started += instance.OnFireCannon;
            @FireCannon.performed += instance.OnFireCannon;
            @FireCannon.canceled += instance.OnFireCannon;
            @ToggleAI.started += instance.OnToggleAI;
            @ToggleAI.performed += instance.OnToggleAI;
            @ToggleAI.canceled += instance.OnToggleAI;
        }

        private void UnregisterCallbacks(IPlaneActions instance)
        {
            @ToggleHelp.started -= instance.OnToggleHelp;
            @ToggleHelp.performed -= instance.OnToggleHelp;
            @ToggleHelp.canceled -= instance.OnToggleHelp;
            @Throttle.started -= instance.OnThrottle;
            @Throttle.performed -= instance.OnThrottle;
            @Throttle.canceled -= instance.OnThrottle;
            @RollPitch.started -= instance.OnRollPitch;
            @RollPitch.performed -= instance.OnRollPitch;
            @RollPitch.canceled -= instance.OnRollPitch;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @ToggleFlaps.started -= instance.OnToggleFlaps;
            @ToggleFlaps.performed -= instance.OnToggleFlaps;
            @ToggleFlaps.canceled -= instance.OnToggleFlaps;
            @FireMissile.started -= instance.OnFireMissile;
            @FireMissile.performed -= instance.OnFireMissile;
            @FireMissile.canceled -= instance.OnFireMissile;
            @FireCannon.started -= instance.OnFireCannon;
            @FireCannon.performed -= instance.OnFireCannon;
            @FireCannon.canceled -= instance.OnFireCannon;
            @ToggleAI.started -= instance.OnToggleAI;
            @ToggleAI.performed -= instance.OnToggleAI;
            @ToggleAI.canceled -= instance.OnToggleAI;
        }

        public void RemoveCallbacks(IPlaneActions instance)
        {
            if (m_Wrapper.m_PlaneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlaneActions instance)
        {
            foreach (var item in m_Wrapper.m_PlaneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlaneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlaneActions @Plane => new PlaneActions(this);

    // Car
    private readonly InputActionMap m_Car;
    private List<ICarActions> m_CarActionsCallbackInterfaces = new List<ICarActions>();
    private readonly InputAction m_Car_Newaction;
    public struct CarActions
    {
        private @PlayerControls m_Wrapper;
        public CarActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Car_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Car; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CarActions set) { return set.Get(); }
        public void AddCallbacks(ICarActions instance)
        {
            if (instance == null || m_Wrapper.m_CarActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CarActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(ICarActions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(ICarActions instance)
        {
            if (m_Wrapper.m_CarActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICarActions instance)
        {
            foreach (var item in m_Wrapper.m_CarActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CarActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CarActions @Car => new CarActions(this);
    public interface IGameplayActions
    {
        void OnFire(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnThrowGrenade(InputAction.CallbackContext context);
        void OnToggleUnarmed(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnLean(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnProne(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
        void OnConsumablePrimaryUse(InputAction.CallbackContext context);
        void OnConsumableSecondaryUse(InputAction.CallbackContext context);
        void OnSuicide(InputAction.CallbackContext context);
        void OnCycleScope(InputAction.CallbackContext context);
        void OnChangeFireMode(InputAction.CallbackContext context);
        void OnCycleBullet(InputAction.CallbackContext context);
        void OnHoldBreath(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnChangeMagnification(InputAction.CallbackContext context);
        void OnToggleMagnification(InputAction.CallbackContext context);
        void OnToggleAttachmentEditing(InputAction.CallbackContext context);
        void OnSelectPrimary(InputAction.CallbackContext context);
    }
    public interface IHotbarActions
    {
        void OnSelectSecondary(InputAction.CallbackContext context);
        void OnSelectThrowables(InputAction.CallbackContext context);
        void OnSelectSpecialEquipment(InputAction.CallbackContext context);
        void OnSelectMedical(InputAction.CallbackContext context);
        void OnSelectTools(InputAction.CallbackContext context);
    }
    public interface IAttachmentsActions
    {
        void OnDigitAxis(InputAction.CallbackContext context);
    }
    public interface IPlaneActions
    {
        void OnToggleHelp(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnRollPitch(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnToggleFlaps(InputAction.CallbackContext context);
        void OnFireMissile(InputAction.CallbackContext context);
        void OnFireCannon(InputAction.CallbackContext context);
        void OnToggleAI(InputAction.CallbackContext context);
    }
    public interface ICarActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
